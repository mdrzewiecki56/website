{"version":3,"sources":["img/dog1.jpg","img/logo.svg","Header.js","Navbar.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Navbar","links","this","props","sites","map","link","id","uuid","key","to","toLowerCase","replace","Component","About","dog","App","exact","path","render","defaultProps","Boolean","window","location","hostname","match","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,qSCgB1BC,MAZjB,WACI,OACI,4BAAQC,UAAU,kBACd,yBAAKA,UAAU,aACf,yBAAKA,UAAU,0CACX,yBAAKC,IAAKC,IAAMC,IAAI,UAExB,yBAAKH,UAAU,e,iCCWZI,E,iLAdP,IAAMC,EAAQC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAC/B,IAAIC,EAAKC,MACT,OAAO,wBAAIZ,UAAU,WAAWa,IAAKF,GAAI,kBAAC,IAAD,CAASG,GAAIJ,EAAKK,cAAcC,QAAQ,MAAO,IAAKhB,UAAU,QAAQU,OAEnH,OACI,yBAAKV,UAAU,4DACX,wBAAIA,UAAU,wDACTK,Q,GAVAY,a,yBC6BNC,E,iLA5BP,OACI,yBAAKlB,UAAU,kBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oCAAmC,yBAAKC,IAAKkB,IAAKhB,IAAI,WACrE,yBAAKH,UAAU,oDACX,yCACA,iIAGR,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oCAAmC,yBAAKC,IAAKkB,IAAKhB,IAAI,WACrE,yBAAKH,UAAU,oDACX,yCACA,iIAGR,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oCAAmC,yBAAKC,IAAKkB,IAAKhB,IAAI,WACrE,yBAAKH,UAAU,oDACX,yCACA,sI,GAtBJiB,a,OCGdG,E,iLAOF,OACE,yBAAKpB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQQ,MAAOF,KAAKC,MAAMC,QAC1B,yBAAKR,UAAU,mBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,SACzC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,aAClB,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAClB,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAClB,kBAAC,IAAD,CAAUR,GAAG,kB,GAjBTG,aAAZG,EACGI,aAAe,CACpBhB,MAAO,CAAE,QAAQ,WAAY,WAAY,aAwB9BY,QCrBKK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASP,OAAO,kBAAC,IAAD,CAAYQ,SAAS,KAAI,kBAAC,EAAD,OAAsBC,SAASC,eAAe,SDyHjF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.db21187e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dog1.50f02411.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport logo from './img/logo.svg';\r\nimport './Header.scss';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"App-header row\">\r\n            <div className=\"col-lg-2\"></div>\r\n            <div className=\"col-lg-8 d-flex justify-content-center\">\r\n                <img src={logo} alt=\"logo\" />\r\n            </div>\r\n            <div className=\"col-lg-2\"></div>\r\n        </header>\r\n    );\r\n  }\r\n  \r\n  export default Header;\r\n  ","import React, {Component} from 'react';\r\nimport './Navbar.scss';\r\nimport {NavLink} from 'react-router-dom';\r\nimport uuid from 'uuid/v4';\r\n\r\nclass Navbar extends Component {\r\n    \r\n    render(){\r\n        const links = this.props.sites.map(link => {\r\n            let id = uuid();\r\n            return <li className=\"nav-item\" key={id}><NavLink to={link.toLowerCase().replace(/\\s/g, '')} className=\"item\">{link}</NavLink></li>})\r\n        \r\n        return (\r\n            <nav className=\"App-navbar navbar navbar-expand-lg navbar-light bg-light\">\r\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0  mx-auto text-center\">\r\n                    {links}\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport './About.scss';\r\nimport dog from './img/dog1.jpg';\r\n\r\nclass About extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"App-about mt-5\">\r\n                <div className=\"row mx-auto mb-5\">\r\n                    <div className=\"col-lg-6 col-sm-12 col-centered \"><img src={dog} alt=\"about\" /></div> \r\n                    <div className=\"col-lg-5 offset-lg-1 col-sm-12 col-centered pt-2\">\r\n                        <h3>Heading 1</h3>\r\n                        <p>Lorem impsumLorem impsumLorem impsumLorem impsumLorem impsumLorem impsumLorem impsumLorem impsum</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mx-auto mb-5\">\r\n                    <div className=\"col-lg-6 col-sm-12 col-centered \"><img src={dog} alt=\"about\" /></div> \r\n                    <div className=\"col-lg-5 offset-lg-1 col-sm-12 col-centered pt-2\">\r\n                        <h3>Heading 2</h3>\r\n                        <p>Lorem impsumLorem impsumLorem impsumLorem impsumLorem impsumLorem impsumLorem impsumLorem impsum</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mx-auto mb-5\">\r\n                    <div className=\"col-lg-6 col-sm-12 col-centered \"><img src={dog} alt=\"about\" /></div> \r\n                    <div className=\"col-lg-5 offset-lg-1 col-sm-12 col-centered pt-2\">\r\n                        <h3>Heading 3</h3>\r\n                        <p>Lorem impsumLorem impsumLorem impsumLorem impsumLorem impsumLorem impsumLorem impsumLorem impsum</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, {Component} from 'react';\nimport './App.scss';\nimport Header from './Header';\nimport Navbar from './Navbar';\nimport About from './About';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nclass App extends Component{\n  static defaultProps = {\n    sites: [ \"About\",\"Option 2\", \"Option 3\", \"Option 4\" \n    ]\n  };\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header />\n        <Navbar sites={this.props.sites} />\n        <div className=\"container-fluid\">\n            <Switch>\n              <Route exact path=\"/about\" render={() => <About />} />\n              <Route exact path=\"/option2\"/>\n              <Route exact path=\"/option3\"/>\n              <Route exact path=\"/option4\"/>\n              <Redirect to=\"/about\" />\n            </Switch>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<HashRouter basename='/'><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}